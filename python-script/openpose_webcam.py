# From Python
# It requires OpenCV installed for Python
import sys
import cv2
import os
import requests
from pose_match import *
from sys import platform

bad = [[1142.3232421875, 728.1851196289062, 0.8426504135131836], [1198.7120361328125, 1119.944580078125, 0.9185787439346313], [918.5460815429688, 1142.4290771484375, 0.8032334446907043], [862.5579223632812, 1646.419677734375, 0.8447969555854797], [985.6318359375, 2083.226806640625, 0.8510572910308838], [1489.4921875, 1108.5941162109375, 0.8460644483566284], [1736.0880126953125, 1489.497314453125, 0.7237370014190674], [1881.57080078125, 1825.55126953125, 0.355158269405365], [1523.1553955078125, 1758.117919921875, 0.7476696372032166], [1366.637451171875, 1825.4892578125, 0.7456164956092834], [1937.7171630859375, 2374.599609375, 0.853018045425415], [1769.8145751953125, 3258.16748046875, 0.7223650217056274], [1680.029296875, 1702.40771484375, 0.7091360688209534], [2385.72119140625, 2082.7783203125, 0.8433859348297119], [2161.330322265625, 2788.30224609375, 0.746890127658844], [1053.02197265625, 694.7454833984375, 0.8389255404472351], [1197.8564453125, 661.05517578125, 0.9435703754425049], [1008.19580078125, 839.873779296875, 0.9256584048271179], [1277.0513916015625, 728.1030883789062, 0.7196429371833801], [2463.7509765625, 2844.2119140625, 0.721824586391449], [2452.483154296875, 2810.9462890625, 0.7185602784156799], [2082.677001953125, 2833.320068359375, 0.7669593691825867], [1859.0816650390625, 3617.022705078125, 0.6371602416038513], [1747.4986572265625, 3572.164306640625, 0.5955163240432739], [1735.466796875, 3269.856201171875, 0.6314183473587036]]
bad = np.array(bad)

good = [[1568.196044921875, 1176.2359619140625, 0.8874599933624268], [1567.66650390625, 1489.7501220703125, 0.9207262992858887], [1310.4051513671875, 1478.8494873046875, 0.8589267730712891], [1221.1370849609375, 1858.9344482421875, 0.8256404995918274], [1466.99267578125, 2127.752197265625, 0.8749884963035583], [1825.4564208984375, 1500.8265380859375, 0.8622338175773621], [1914.64013671875, 1847.9443359375, 0.8729796409606934], [1814.080810546875, 2116.6240234375, 0.8582468628883362], [1579.111572265625, 2138.974609375, 0.7971763610839844], [1399.9945068359375, 2150.250732421875, 0.7516412734985352], [1378.10986328125, 2654.06103515625, 0.874354362487793], [1466.5958251953125, 3101.721435546875, 0.8760700821876526], [1747.730224609375, 2127.9482421875, 0.7920464873313904], [2082.88037109375, 2586.9619140625, 0.8460466265678406], [1915.2581787109375, 3057.208740234375, 0.8779643177986145], [1523.197265625, 1119.864013671875, 0.889336347579956], [1635.253662109375, 1119.6722412109375, 0.923917293548584], [1444.966064453125, 1164.904541015625, 0.8516204953193665], [1702.29052734375, 1153.7130126953125, 0.8362717628479004], [2004.6907958984375, 3314.58251953125, 0.7873661518096924], [2082.97900390625, 3269.65576171875, 0.7607110738754272], [1836.514404296875, 3079.11865234375, 0.8531792163848877], [1321.7828369140625, 3359.359130859375, 0.7732552289962769], [1276.924560546875, 3314.767333984375, 0.7223288416862488], [1500.656005859375, 3146.5595703125, 0.8295161724090576]]
good = np.array(good)
good2 = [[1780.665283203125, 941.05126953125, 0.911312997341156], [1982.1563720703125, 1377.0836181640625, 0.8073999881744385], [1859.3414306640625, 1288.47314453125, 0.7608336210250854], [1724.7227783203125, 1746.97802734375, 0.6839304566383362], [1489.5675048828125, 1926.565673828125, 0.8270973563194275], [2082.735107421875, 1433.7181396484375, 0.7586708068847656], [1859.26953125, 1993.1029052734375, 0.7991799712181091], [1478.3460693359375, 2071.732421875, 0.8400299549102783], [1691.25634765625, 2116.73486328125, 0.6787436008453369], [1601.6973876953125, 2026.9482421875, 0.6379573345184326], [1019.6878051757812, 2104.93701171875, 0.9193300008773804], [1131.3931884765625, 2643.04296875, 0.7317453622817993], [1769.7406005859375, 2195.438720703125, 0.6880046725273132], [996.8099365234375, 2407.895263671875, 0.7960047721862793], [1198.2572021484375, 2989.976318359375, 0.8490920066833496], [1814.013671875, 896.15478515625, 0.10723511874675751], [1837.1224365234375, 907.3914794921875, 0.894290030002594], [0.0, 0.0, 0.0], [2026.8319091796875, 1008.0570678710938, 0.8961223363876343], [896.3220825195312, 3124.47021484375, 0.7603003978729248], [952.5902709960938, 3157.784423828125, 0.7902114391326904], [1265.6983642578125, 3023.6318359375, 0.8278443217277527], [929.9739990234375, 2698.9658203125, 0.8209705352783203], [940.925537109375, 2665.206298828125, 0.772475004196167], [1210.2225341796875, 2709.8662109375, 0.4668694734573364]]
good2 = np.array(good2)
good3 = [[1635.2982177734375, 1187.0655517578125, 0.8916772603988647], [1624.115966796875, 1489.7230224609375, 0.880039393901825], [1377.0316162109375, 1478.658935546875, 0.8743677139282227], [1288.078125, 1870.46728515625, 0.8603775501251221], [1489.822265625, 2150.28564453125, 0.8309503793716431], [1870.169921875, 1500.6541748046875, 0.8344668745994568], [1937.824462890625, 1847.75732421875, 0.8496043086051941], [1837.1790771484375, 2127.7392578125, 0.8540346026420593], [1645.8812255859375, 2161.16796875, 0.7897039651870728], [1467.2081298828125, 2161.542236328125, 0.7774443626403809], [1444.6533203125, 2665.342529296875, 0.8023641109466553], [1489.6273193359375, 3102.004638671875, 0.8422127366065979], [1814.35498046875, 2161.3017578125, 0.7456700205802917], [2116.416259765625, 2620.04833984375, 0.8563608527183533], [1971.02783203125, 3068.380859375, 0.8311002254486084], [1567.9666748046875, 1120.323974609375, 0.9442322254180908], [1669.0185546875, 1119.9798583984375, 0.9106504321098328], [1479.0323486328125, 1187.2109375, 0.9041863083839417], [1747.27734375, 1165.0635986328125, 0.8820399045944214], [2038.0478515625, 3325.802001953125, 0.7851800322532654], [2105.7587890625, 3270.154296875, 0.7888706922531128], [1903.7374267578125, 3079.84228515625, 0.8580402731895447], [1377.9716796875, 3359.58642578125, 0.8128963708877563], [1310.646728515625, 3325.88671875, 0.7167726755142212], [1557.2069091796875, 3146.568359375, 0.8134924173355103]]
good3 = np.array(good3)
good4 = [[1489.3917236328125, 1119.8458251953125, 0.9090814590454102], [1477.9398193359375, 1455.873779296875, 0.9219487309455872], [1209.8382568359375, 1433.6943359375, 0.8345057368278503], [1120.593994140625, 1814.4410400390625, 0.8676859736442566], [1355.41796875, 2094.59814453125, 0.8892781734466553], [1735.8363037109375, 1466.8033447265625, 0.8931812047958374], [1814.383544921875, 1814.2510986328125, 0.8465781211853027], [1713.355224609375, 2094.10986328125, 0.8657193779945374], [1478.4114990234375, 2105.366943359375, 0.8463747501373291], [1299.2685546875, 2105.619384765625, 0.8100460767745972], [1277.101806640625, 2631.552001953125, 0.8836316466331482], [1332.849365234375, 3078.8662109375, 0.841727614402771], [1657.517578125, 2105.272216796875, 0.8227964639663696], [1971.15234375, 2553.54931640625, 0.8677226305007935], [1813.985595703125, 3012.10009765625, 0.8552477955818176], [1444.70849609375, 1053.2313232421875, 0.8435909152030945], [1556.4368896484375, 1052.97509765625, 0.8979984521865845], [1366.087890625, 1108.89404296875, 0.9135624170303345], [1624.106201171875, 1108.6065673828125, 0.8972356915473938], [1859.2901611328125, 3269.69580078125, 0.8341167569160461], [1937.3409423828125, 3236.3994140625, 0.7824552059173584], [1735.61767578125, 3023.3486328125, 0.8636822700500488], [1220.8001708984375, 3325.713623046875, 0.7650696635246277], [1153.8603515625, 3269.98828125, 0.7327669858932495], [1388.859375, 3090.5302734375, 0.8856608867645264]]
good4 = np.array(good4)
good5 = [[1848.3248291015625, 874.0693969726562, 0.8545309901237488], [2049.378173828125, 1299.1383056640625, 0.8135335445404053], [1937.4583740234375, 1210.1044921875, 0.8085471987724304], [1814.1820068359375, 1669.1275634765625, 0.6572909951210022], [1579.0145263671875, 1892.5308837890625, 0.7941223382949829], [2161.21337890625, 1388.4783935546875, 0.7785968780517578], [1960.045654296875, 1925.9166259765625, 0.8378414511680603], [1579.258544921875, 2015.803955078125, 0.8659214377403259], [1803.092041015625, 2083.18212890625, 0.6670876145362854], [1702.47265625, 1982.2802734375, 0.6030983924865723], [1109.0548095703125, 2038.459716796875, 0.872232973575592], [1209.868408203125, 2609.406005859375, 0.753501296043396], [1881.404296875, 2172.54443359375, 0.67339026927948], [1086.70703125, 2362.945068359375, 0.8792902231216431], [1288.0391845703125, 2923.051513671875, 0.8151917457580566], [1892.7762451171875, 828.99365234375, 0.06664419919252396], [1926.2274169921875, 840.2041015625, 0.9457171559333801], [0.0, 0.0, 0.0], [2116.663330078125, 930.1608276367188, 0.9366909265518188], [997.0440673828125, 3079.234375, 0.8118072748184204], [1053.1875, 3090.595703125, 0.8055838346481323], [1366.4273681640625, 2989.7255859375, 0.844840407371521], [1019.2169799804688, 2643.21435546875, 0.8746243715286255], [1030.1416015625, 2631.658935546875, 0.8388304114341736], [1298.9696044921875, 2642.8291015625, 0.4583314061164856]]
good5 = np.array(good5)

# Remember to add your installation path here
# Option a
dir_path = os.path.dirname(os.path.realpath(__file__))
if platform == "win32": sys.path.append(dir_path + '/../openpose/build/python/openpose/');
else: sys.path.append('../openpose/build/python');
# Option b
# If you run `make install` (default path is `/usr/local/python` for Ubuntu), you can also access the OpenPose/python module from there. This will install OpenPose and the python library at your desired installation path. Ensure that this is in your python path in order to use it.
# sys.path.append('/usr/local/python')

# Parameters for OpenPose. Take a look at C++ OpenPose example for meaning of components. Ensure all below are filled
try:
    from openpose import *
except:
    raise Exception('Error: OpenPose library could not be found. Did you enable `BUILD_PYTHON` in CMake and have this Python script in the right folder?')

params = dict()
params["logging_level"] = 3
params["output_resolution"] = "-1x-1"
params["net_resolution"] = "-1x368"
params["model_pose"] = "BODY_25"
params["alpha_pose"] = 0.6
params["scale_gap"] = 0.3
params["scale_number"] = 1
params["render_threshold"] = 0.05
# If GPU version is built, and multiple GPUs are available, set the ID here
params["num_gpu_start"] = 0
params["disable_blending"] = False
# Ensure you point to the correct path where models are located
params["default_model_folder"] = dir_path + "/../../../models/"
        
openpose = OpenPose(params)

def openPoseWebcam(img):
    # Output keypoints and the image with the human skeleton blended on it
    keypoints, output_image = openpose.forward(img, True)
    # Print the human pose keypoints, i.e., a [#people x #keypoints x 3]-dimensional numpy object with the keypoints of all the people on that image
    # print(keypoints)

    if (keypoints.shape[0] > 0 and keypoints[0].shape == a.shape):
        (b1, b2) = compare(keypoints[0], bad)
        (g11, g12) = compare(keypoints[0], good)
        (g21, g22) = compare(keypoints[0], good2)
        (g31, g32) = compare(keypoints[0], good3)
        (g41, g42) = compare(keypoints[0], good4)
        (g51, g52) = compare(keypoints[0], good5)
        if (6 < g11 + g12 and 6 < g21 + g22 and 6 < g41 + g42):
            requests.post("http://40.76.211.223:3000/openpose", {"posture": "bad"})
            print("bad")
        else:
            requests.post("http://40.76.211.223:3000/openpose", {"posture": "good"})
            print("good ---------------")

    return output_image

def runLoop():
    stream = cv2.VideoCapture(0)
    while 1:
        ret, img = stream.read();
        output_image = openPoseWebcam(img)
        # Display the image
        cv2.imshow("output", output_image)
        cv2.waitKey(100)

# runLoop()